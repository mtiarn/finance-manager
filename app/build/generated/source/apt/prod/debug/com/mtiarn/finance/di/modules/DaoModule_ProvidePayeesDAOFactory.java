// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import android.content.Context;
import com.mtiarn.finance.dao.PayeesDAO;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaoModule_ProvidePayeesDAOFactory implements Factory<PayeesDAO> {
  private final DaoModule module;

  private final Provider<Context> contextProvider;

  public DaoModule_ProvidePayeesDAOFactory(DaoModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public PayeesDAO get() {
    return provideInstance(module, contextProvider);
  }

  public static PayeesDAO provideInstance(DaoModule module, Provider<Context> contextProvider) {
    return proxyProvidePayeesDAO(module, contextProvider.get());
  }

  public static DaoModule_ProvidePayeesDAOFactory create(
      DaoModule module, Provider<Context> contextProvider) {
    return new DaoModule_ProvidePayeesDAOFactory(module, contextProvider);
  }

  public static PayeesDAO proxyProvidePayeesDAO(DaoModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.providePayeesDAO(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
