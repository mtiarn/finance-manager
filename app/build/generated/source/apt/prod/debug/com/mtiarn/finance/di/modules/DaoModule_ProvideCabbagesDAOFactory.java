// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import android.content.Context;
import com.mtiarn.finance.dao.CabbagesDAO;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaoModule_ProvideCabbagesDAOFactory implements Factory<CabbagesDAO> {
  private final DaoModule module;

  private final Provider<Context> contextProvider;

  public DaoModule_ProvideCabbagesDAOFactory(DaoModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public CabbagesDAO get() {
    return provideInstance(module, contextProvider);
  }

  public static CabbagesDAO provideInstance(DaoModule module, Provider<Context> contextProvider) {
    return proxyProvideCabbagesDAO(module, contextProvider.get());
  }

  public static DaoModule_ProvideCabbagesDAOFactory create(
      DaoModule module, Provider<Context> contextProvider) {
    return new DaoModule_ProvideCabbagesDAOFactory(module, contextProvider);
  }

  public static CabbagesDAO proxyProvideCabbagesDAO(DaoModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideCabbagesDAO(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
