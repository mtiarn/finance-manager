// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance;

import android.content.Context;
import android.content.SharedPreferences;
import com.mtiarn.finance.dao.AccountsDAO;
import com.mtiarn.finance.dao.CabbagesDAO;
import com.mtiarn.finance.dao.TransactionsDAO;
import com.mtiarn.finance.iab.BillingService;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class FragmentTransactions_MembersInjector
    implements MembersInjector<FragmentTransactions> {
  private final Provider<BillingService> mBillingServiceProvider;

  private final Provider<SharedPreferences> mPreferencesProvider;

  private final Provider<Context> mContextProvider;

  private final Provider<TransactionsDAO> mTransactionsDAOProvider;

  private final Provider<AccountsDAO> mAccountsDAOProvider;

  private final Provider<CabbagesDAO> mCabbagesDAOProvider;

  public FragmentTransactions_MembersInjector(
      Provider<BillingService> mBillingServiceProvider,
      Provider<SharedPreferences> mPreferencesProvider,
      Provider<Context> mContextProvider,
      Provider<TransactionsDAO> mTransactionsDAOProvider,
      Provider<AccountsDAO> mAccountsDAOProvider,
      Provider<CabbagesDAO> mCabbagesDAOProvider) {
    this.mBillingServiceProvider = mBillingServiceProvider;
    this.mPreferencesProvider = mPreferencesProvider;
    this.mContextProvider = mContextProvider;
    this.mTransactionsDAOProvider = mTransactionsDAOProvider;
    this.mAccountsDAOProvider = mAccountsDAOProvider;
    this.mCabbagesDAOProvider = mCabbagesDAOProvider;
  }

  public static MembersInjector<FragmentTransactions> create(
      Provider<BillingService> mBillingServiceProvider,
      Provider<SharedPreferences> mPreferencesProvider,
      Provider<Context> mContextProvider,
      Provider<TransactionsDAO> mTransactionsDAOProvider,
      Provider<AccountsDAO> mAccountsDAOProvider,
      Provider<CabbagesDAO> mCabbagesDAOProvider) {
    return new FragmentTransactions_MembersInjector(
        mBillingServiceProvider,
        mPreferencesProvider,
        mContextProvider,
        mTransactionsDAOProvider,
        mAccountsDAOProvider,
        mCabbagesDAOProvider);
  }

  @Override
  public void injectMembers(FragmentTransactions instance) {
    injectMBillingService(instance, mBillingServiceProvider.get());
    injectMPreferences(instance, mPreferencesProvider.get());
    injectMContext(instance, mContextProvider.get());
    injectMTransactionsDAO(instance, mTransactionsDAOProvider.get());
    injectMAccountsDAO(instance, mAccountsDAOProvider.get());
    injectMCabbagesDAO(instance, mCabbagesDAOProvider.get());
  }

  public static void injectMBillingService(
      FragmentTransactions instance, BillingService mBillingService) {
    instance.mBillingService = mBillingService;
  }

  public static void injectMPreferences(
      FragmentTransactions instance, SharedPreferences mPreferences) {
    instance.mPreferences = mPreferences;
  }

  public static void injectMContext(FragmentTransactions instance, Context mContext) {
    instance.mContext = mContext;
  }

  public static void injectMTransactionsDAO(
      FragmentTransactions instance, TransactionsDAO mTransactionsDAO) {
    instance.mTransactionsDAO = mTransactionsDAO;
  }

  public static void injectMAccountsDAO(FragmentTransactions instance, AccountsDAO mAccountsDAO) {
    instance.mAccountsDAO = mAccountsDAO;
  }

  public static void injectMCabbagesDAO(FragmentTransactions instance, CabbagesDAO mCabbagesDAO) {
    instance.mCabbagesDAO = mCabbagesDAO;
  }
}
