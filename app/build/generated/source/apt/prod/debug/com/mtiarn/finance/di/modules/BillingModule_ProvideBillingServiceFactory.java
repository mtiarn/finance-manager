// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import com.mtiarn.finance.iab.BillingService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class BillingModule_ProvideBillingServiceFactory implements Factory<BillingService> {
  private final BillingModule module;

  public BillingModule_ProvideBillingServiceFactory(BillingModule module) {
    this.module = module;
  }

  @Override
  public BillingService get() {
    return provideInstance(module);
  }

  public static BillingService provideInstance(BillingModule module) {
    return proxyProvideBillingService(module);
  }

  public static BillingModule_ProvideBillingServiceFactory create(BillingModule module) {
    return new BillingModule_ProvideBillingServiceFactory(module);
  }

  public static BillingService proxyProvideBillingService(BillingModule instance) {
    return Preconditions.checkNotNull(
        instance.provideBillingService(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
