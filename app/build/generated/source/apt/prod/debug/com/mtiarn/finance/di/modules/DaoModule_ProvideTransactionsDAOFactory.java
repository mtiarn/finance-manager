// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import android.content.Context;
import com.mtiarn.finance.dao.TransactionsDAO;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaoModule_ProvideTransactionsDAOFactory implements Factory<TransactionsDAO> {
  private final DaoModule module;

  private final Provider<Context> contextProvider;

  public DaoModule_ProvideTransactionsDAOFactory(
      DaoModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public TransactionsDAO get() {
    return provideInstance(module, contextProvider);
  }

  public static TransactionsDAO provideInstance(
      DaoModule module, Provider<Context> contextProvider) {
    return proxyProvideTransactionsDAO(module, contextProvider.get());
  }

  public static DaoModule_ProvideTransactionsDAOFactory create(
      DaoModule module, Provider<Context> contextProvider) {
    return new DaoModule_ProvideTransactionsDAOFactory(module, contextProvider);
  }

  public static TransactionsDAO proxyProvideTransactionsDAO(DaoModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideTransactionsDAO(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
