// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance;

import android.content.SharedPreferences;
import com.mtiarn.finance.dao.AccountsDAO;
import com.mtiarn.finance.dao.CabbagesDAO;
import com.mtiarn.finance.dao.CreditsDAO;
import com.mtiarn.finance.dao.TransactionsDAO;
import com.mtiarn.finance.iab.BillingService;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class FragmentAccounts_MembersInjector implements MembersInjector<FragmentAccounts> {
  private final Provider<BillingService> mBillingServiceProvider;

  private final Provider<SharedPreferences> mPreferencesProvider;

  private final Provider<AccountsDAO> mAccountsDAOProvider;

  private final Provider<CreditsDAO> mCreditsDAOProvider;

  private final Provider<TransactionsDAO> mTransactionsDAOProvider;

  private final Provider<CabbagesDAO> mCabbagesDAOProvider;

  public FragmentAccounts_MembersInjector(
      Provider<BillingService> mBillingServiceProvider,
      Provider<SharedPreferences> mPreferencesProvider,
      Provider<AccountsDAO> mAccountsDAOProvider,
      Provider<CreditsDAO> mCreditsDAOProvider,
      Provider<TransactionsDAO> mTransactionsDAOProvider,
      Provider<CabbagesDAO> mCabbagesDAOProvider) {
    this.mBillingServiceProvider = mBillingServiceProvider;
    this.mPreferencesProvider = mPreferencesProvider;
    this.mAccountsDAOProvider = mAccountsDAOProvider;
    this.mCreditsDAOProvider = mCreditsDAOProvider;
    this.mTransactionsDAOProvider = mTransactionsDAOProvider;
    this.mCabbagesDAOProvider = mCabbagesDAOProvider;
  }

  public static MembersInjector<FragmentAccounts> create(
      Provider<BillingService> mBillingServiceProvider,
      Provider<SharedPreferences> mPreferencesProvider,
      Provider<AccountsDAO> mAccountsDAOProvider,
      Provider<CreditsDAO> mCreditsDAOProvider,
      Provider<TransactionsDAO> mTransactionsDAOProvider,
      Provider<CabbagesDAO> mCabbagesDAOProvider) {
    return new FragmentAccounts_MembersInjector(
        mBillingServiceProvider,
        mPreferencesProvider,
        mAccountsDAOProvider,
        mCreditsDAOProvider,
        mTransactionsDAOProvider,
        mCabbagesDAOProvider);
  }

  @Override
  public void injectMembers(FragmentAccounts instance) {
    injectMBillingService(instance, DoubleCheck.lazy(mBillingServiceProvider));
    injectMPreferences(instance, DoubleCheck.lazy(mPreferencesProvider));
    injectMAccountsDAO(instance, DoubleCheck.lazy(mAccountsDAOProvider));
    injectMCreditsDAO(instance, DoubleCheck.lazy(mCreditsDAOProvider));
    injectMTransactionsDAO(instance, DoubleCheck.lazy(mTransactionsDAOProvider));
    injectMCabbagesDAO(instance, DoubleCheck.lazy(mCabbagesDAOProvider));
  }

  public static void injectMBillingService(
      FragmentAccounts instance, Lazy<BillingService> mBillingService) {
    instance.mBillingService = mBillingService;
  }

  public static void injectMPreferences(
      FragmentAccounts instance, Lazy<SharedPreferences> mPreferences) {
    instance.mPreferences = mPreferences;
  }

  public static void injectMAccountsDAO(FragmentAccounts instance, Lazy<AccountsDAO> mAccountsDAO) {
    instance.mAccountsDAO = mAccountsDAO;
  }

  public static void injectMCreditsDAO(FragmentAccounts instance, Lazy<CreditsDAO> mCreditsDAO) {
    instance.mCreditsDAO = mCreditsDAO;
  }

  public static void injectMTransactionsDAO(
      FragmentAccounts instance, Lazy<TransactionsDAO> mTransactionsDAO) {
    instance.mTransactionsDAO = mTransactionsDAO;
  }

  public static void injectMCabbagesDAO(FragmentAccounts instance, Lazy<CabbagesDAO> mCabbagesDAO) {
    instance.mCabbagesDAO = mCabbagesDAO;
  }
}
