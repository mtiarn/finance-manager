// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import android.content.Context;
import com.mtiarn.finance.dao.ProductsDAO;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaoModule_ProvideProductsDAOFactory implements Factory<ProductsDAO> {
  private final DaoModule module;

  private final Provider<Context> contextProvider;

  public DaoModule_ProvideProductsDAOFactory(DaoModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ProductsDAO get() {
    return provideInstance(module, contextProvider);
  }

  public static ProductsDAO provideInstance(DaoModule module, Provider<Context> contextProvider) {
    return proxyProvideProductsDAO(module, contextProvider.get());
  }

  public static DaoModule_ProvideProductsDAOFactory create(
      DaoModule module, Provider<Context> contextProvider) {
    return new DaoModule_ProvideProductsDAOFactory(module, contextProvider);
  }

  public static ProductsDAO proxyProvideProductsDAO(DaoModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideProductsDAO(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
