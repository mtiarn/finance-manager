// Generated by Dagger (https://google.github.io/dagger).
package com.mtiarn.finance.di.modules;

import com.mtiarn.finance.fts.FtsApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class FtsApiModule_ProvideSyncApiFactory implements Factory<FtsApi> {
  private final FtsApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public FtsApiModule_ProvideSyncApiFactory(
      FtsApiModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public FtsApi get() {
    return provideInstance(module, retrofitProvider);
  }

  public static FtsApi provideInstance(FtsApiModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvideSyncApi(module, retrofitProvider.get());
  }

  public static FtsApiModule_ProvideSyncApiFactory create(
      FtsApiModule module, Provider<Retrofit> retrofitProvider) {
    return new FtsApiModule_ProvideSyncApiFactory(module, retrofitProvider);
  }

  public static FtsApi proxyProvideSyncApi(FtsApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.provideSyncApi(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
